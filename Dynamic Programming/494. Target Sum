class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int s=accumulate(nums.begin(),nums.end(),0);
         if(s<abs(target) || (s+target)%2!=0)
            return 0;
        int s1=(s+target)/2;
        int n=nums.size();
        int t[n+1][s1+1];
        // if(s<abs(target) || (s+target)%2!=0)
        //     return 0;
        
        // for(int i=0;i<n+1;i++)
        // {
        //     for(int j=0;j<s1+1;j++)
        //     {
        //         if(i==0)
        //             t[i][j]=0;
        //         if(j==0)
        //             t[i][j]=1;
        //     }
        // }
        t[0][0]=1;
        for(int i=1;i<s1+1;i++)
            t[0][i]=0;
        for(int i=1;i<n+1;i++)
        {
            for(int j=0;j<s1+1;j++)
            {
                if(nums[i-1]<=j)
                    t[i][j]=t[i-1][j-nums[i-1]] + t[i-1][j];
                else
                    t[i][j]=t[i-1][j];
            }
        }
        return t[n][s1];
        
        
    }
};
